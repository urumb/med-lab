# Generated by Django 5.2.5 on 2025-08-10 14:59

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name of the patient', max_length=100)),
                ('age', models.IntegerField(help_text='Age of the patient', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('phone', models.CharField(help_text='Contact phone number (include country code if international)', max_length=15)),
                ('email', models.EmailField(help_text='Email address for contact and notifications', max_length=254)),
                ('address', models.TextField(help_text='Full address of the patient')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(help_text='Name of the medical test', max_length=100, unique=True)),
                ('description', models.TextField(help_text='Detailed description of the test')),
                ('price', models.DecimalField(decimal_places=2, help_text='Price of the test in rupees', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('duration_hours', models.IntegerField(default=1, help_text='Expected duration of the test in hours', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(24)])),
                ('is_active', models.BooleanField(default=True, help_text='Whether this test is currently available for booking')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Medical Test',
                'verbose_name_plural': 'Medical Tests',
                'ordering': ['test_name'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateField(help_text='Date when the test will be performed')),
                ('booking_time', models.TimeField(help_text='Time when the test will be performed')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the booking', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Additional notes or special instructions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(help_text='Patient who made the booking', on_delete=django.db.models.deletion.CASCADE, to='booking.patient')),
                ('test', models.ForeignKey(help_text='Medical test to be performed', on_delete=django.db.models.deletion.CASCADE, to='booking.test')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-booking_date', '-booking_time'],
                'unique_together': {('test', 'booking_date', 'booking_time')},
            },
        ),
    ]
